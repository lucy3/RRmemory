var len = 10
var cost = 2
var true_p = 0.9

var generate_bstr = function (len) {
  var coin = function() {return flip(true_p)};
  return repeat(len, coin);
};

var sequence = generate_bstr(len);
display(sequence)

var observedDataSizes = _.range(len+1);

var idealLearner = function(d){
  return Infer({method: "enumerate"}, function(){
    var p = uniformDraw([0.1,0.3, 0.5, 0.7,0.9])
    var coin = function() {return flip(p)};
    condition(_.isEqual(d, repeat(d.length, coin))); 
    return p
  })
}

var estimates = map(function(N) {
  return expectation(idealLearner(sequence.slice(0,N)))
}, observedDataSizes);

viz.line(observedDataSizes, estimates);
